@use '@angular/material' as mat;
@import '~bootstrap/scss/bootstrap';

@import '@angular/material/theming';

$custom-typography: mat.define-typography-config(
  $font-family: 'Open-sans, Arial, sans-serif'
);

@import './styles/styles-variables';
@import './styles/style-reset';
@import './styles/styles-reset.scss-theme';

@include mat.core();

@import './styles/themes/black-theme.scss';
@import './styles/themes/light-theme.scss';

@import 'app/modules/home/page/home.component.scss';

@mixin custom-components-theme($theme) {
  @include my-styles-reset-theme($theme);
  @include custom-according-theme($theme);
}

.afs-light-theme {
  @include mat.all-component-themes($afs-light-theme);
  @include custom-components-theme($afs-light-theme);
}

.afs-dark-theme {
  @include mat.all-component-themes($afs-black-theme);
  @include custom-components-theme($afs-black-theme);
}

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$theme-primary: mat.define-palette(mat.$indigo-palette);
$theme-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$theme-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme(
  (
    color: (
      primary: $theme-primary,
      accent: $theme-accent,
      warn: $theme-warn
    )
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);
